from chat_client import DeepSeekClient
from logger import ConversationLogger
import colorama
from colorama import Fore, Back, Style

colorama.init()

def print_banner():
    print(f"""{Fore.BLACK}{Back.WHITE}
‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÑ  ‚ñí‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñÄ‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñì‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñë ‚ñà‚ñà 
‚ñí‚ñà‚ñà‚ñÄ ‚ñà‚ñà‚ñå‚ñí‚ñà‚ñà‚ñí  ‚ñà‚ñà‚ñí‚ñì‚ñà‚ñà ‚ñí ‚ñà‚ñà‚ñí‚ñì‚ñà‚ñà‚ñë  ‚ñà‚ñà‚ñí‚ñì‚ñà‚ñà‚ñë ‚ñà‚ñà‚ñí
‚ñë‚ñà‚ñà   ‚ñà‚ñå‚ñí‚ñà‚ñà‚ñë  ‚ñà‚ñà‚ñí‚ñì‚ñà‚ñà ‚ñë‚ñÑ‚ñà ‚ñí‚ñì‚ñà‚ñà‚ñë ‚ñà‚ñà‚ñì‚ñí‚ñí‚ñà‚ñà‚ñÄ‚ñÄ‚ñà‚ñà‚ñë
‚ñë‚ñì‚ñà‚ñÑ   ‚ñå‚ñí‚ñà‚ñà   ‚ñà‚ñà‚ñë‚ñí‚ñà‚ñà‚ñÄ‚ñÄ‚ñà‚ñÑ  ‚ñí‚ñà‚ñà‚ñÑ‚ñà‚ñì‚ñí ‚ñí‚ñë‚ñì‚ñà ‚ñë‚ñà‚ñà 
‚ñë‚ñí‚ñà‚ñà‚ñà‚ñà‚ñì ‚ñë ‚ñà‚ñà‚ñà‚ñà‚ñì‚ñí‚ñë‚ñë‚ñà‚ñà‚ñì ‚ñí‚ñà‚ñà‚ñí‚ñí‚ñà‚ñà‚ñí ‚ñë  ‚ñë‚ñë‚ñì‚ñà‚ñí‚ñë‚ñà‚ñà‚ñì
 ‚ñí‚ñí‚ñì  ‚ñí ‚ñë ‚ñí‚ñë‚ñí‚ñë‚ñí‚ñë ‚ñë ‚ñí‚ñì ‚ñë‚ñí‚ñì‚ñë‚ñí‚ñì‚ñí‚ñë ‚ñë  ‚ñë ‚ñí ‚ñë‚ñë‚ñí‚ñë‚ñí
 ‚ñë ‚ñí  ‚ñí   ‚ñë ‚ñí ‚ñí‚ñë   ‚ñë‚ñí ‚ñë ‚ñí‚ñë‚ñë‚ñí ‚ñë      ‚ñí ‚ñë‚ñí‚ñë ‚ñë
 ‚ñë ‚ñë  ‚ñë ‚ñë ‚ñë ‚ñë ‚ñí    ‚ñë‚ñë   ‚ñë ‚ñë‚ñë        ‚ñë  ‚ñë‚ñë ‚ñë
   ‚ñë        ‚ñë ‚ñë     ‚ñë               ‚ñë  ‚ñë  ‚ñë
 ‚ñë{Style.RESET_ALL}""")

def main():
    print_banner()
    print(f"\n{Fore.MAGENTA}‚öõÔ∏è  Inicializando matriz de di√°logo no-lineal...")
    
    model_choice = input(f"{Fore.CYAN}Selecciona tu interfaz:\n1. Esquizochat\n2. Razonador Cu√°ntico\n{Fore.WHITE}¬ª {Style.RESET_ALL}").strip()
    model_type = "reasoner" if model_choice == "2" else "chat"
    
    client = DeepSeekClient(model_type=model_type)
    logger = ConversationLogger()
    turno = 1
    
    try:
        while True:
            user_input = input(f"\n{Fore.YELLOW}üåÄ [Ronda {turno}] ‚ûî {Style.RESET_ALL}").strip()
            
            if user_input.lower() == 'q':
                print(f"\n{Fore.RED}‚ò†Ô∏è  Protocolo de terminaci√≥n iniciado...{Style.RESET_ALL}")
                break
                
            if user_input.lower() == 'c':
                client.clear_context()
                print(f"\n{Fore.BLUE}‚ôªÔ∏è  Contexto reiniciado:")
                if client.model_type == "chat":
                    print(f"{Fore.CYAN}{client.messages[-1]['content']}{Style.RESET_ALL}")
                turno = 1
                continue
                
            # Procesamiento seguro
            print(f"{Fore.WHITE}‚ö° [Procesando en {model_type.upper()}]...", end='\r')
            logger.log_message("user", user_input)
            
            try:
                full_response = {"reasoning": "", "content": ""}
                print(f"\n{Fore.GREEN}üåÄ [Salida neuronal]:")
                
                for chunk in client.send_message(user_input):
                    # Manejo a prueba de None
                    razonamiento = chunk.get('reasoning', '') or ''
                    contenido = chunk.get('content', '') or ''
                    
                    if razonamiento:
                        print(f"{Fore.YELLOW}{razonamiento}{Style.RESET_ALL}", end='', flush=True)
                        full_response['reasoning'] += razonamiento
                    
                    if contenido:
                        print(f"{Fore.RED}{contenido}{Style.RESET_ALL}", end='', flush=True)
                        full_response['content'] += contenido
                
                logger.log_message("assistant", f"RAZONAMIENTO:\n{full_response['reasoning']}\nRESPUESTA:\n{full_response['content']}")
                turno += 1
                print(f"\n{Fore.CYAN}‚ö° Contin√∫a la conversaci√≥n (o 'q' para salir)...")
                
            except Exception as e:
                print(f"\n{Fore.RED}‚ò¢Ô∏è  Error cr√≠tico: {str(e)}{Style.RESET_ALL}")
                client.clear_context()
                turno = 1
                
    finally:
        logger.close_session()
        colorama.deinit()

if __name__ == "__main__":
    main()